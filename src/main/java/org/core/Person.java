package org.core;

import java.util.List;

enum GENDER { MALE, FEMALE };

/**
 * immutable
 * hashcode, equals generated by default
 * we can inject methods
 * no non-static things
 * no extend class, cannot be extended
 * implements interfaces
 * compact constructor is possible, if you need some validations etc...
 */
public record Person(Integer id, String firstName, String lastname, String email, GENDER gender, Integer age, List<String> phones) {

    //compact constructor
    public Person {
        //Todo: validate using function chaining (combining pattern) - high order functions
        if (id < 0) throw new IllegalArgumentException("not valid person id!");
    }

    @Override
    public boolean equals(Object o) {
        return id.equals(((Person)o).id);
    }

        //normally hashes all fields
    @Override
    public int hashCode() {
        return id.hashCode();
    }
}
